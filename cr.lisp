(defparameter *bookmark* '((A . nil) (B . nil)))
(defparameter *next* 'A)

(defun A ()
  (labels ((idle () 
             (format *standard-output* "A 1~%") 
             (setf (cdr (assoc 'A *bookmark*)) #'running) 
             (setf *next* 'B))
         (running () 
           (format *standard-output* "A  2~%") 
           (setf (cdr (assoc 'A *bookmark*)) #'idle) 
           (setf *next* 'B)))
    (setf (cdr (assoc 'A *bookmark*)) #'idle)))
  

(defun B ()
  (labels ((idle () 
             (format *standard-output* "B 1~%") 
             (setf (cdr (assoc 'B *bookmark*)) #'running) 
             (setf *next* 'A))
           (running () 
             (format *standard-output* "B  2~%") 
             (setf (cdr (assoc 'B *bookmark*)) #'idle) 
           (setf *next* 'A)))
    (setf (cdr (assoc 'B *bookmark*)) #'idle)))

(defun coroutine-manager ()
  (A)
  (B)
  (dotimes (i 10)
    (let ((f (cdr (assoc *next* *bookmark*))))
      (funcall f))))
